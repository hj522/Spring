<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:beans="http://www.springframework.org/schema/beans" 
xmlns:context="http://www.springframework.org/schema/context" 
xmlns:security="http://www.springframework.org/schema/security" 
xsi:schemaLocation="http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc.xsd 
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context.xsd 
http://www.springframework.org/schema/security 
http://www.springframework.org/schema/security/spring-security-4.2.xsd">

	<!-- servlet-context.xml : 스프링 웹(view) 설정 파일 -->

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<!-- static folder설정(정적 폴더) => css, images, upload, js -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan	base-package="kr.or.ddit" />
	<context:component-scan	base-package="kr.or.ddit.security" />

	<!-- 첨부 파일을 처리하는 빈 설정 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
	</beans:bean>
	
	<!-- 업로드된 파일 저장 위치 설정 -->
	<beans:bean id="uploadPath" class="java.lang.String">
		<beans:constructor-arg value="C:\\upload"></beans:constructor-arg>
	</beans:bean>
	
	<!-- 스프링 시큐리티 애너테이션 활성화 
		1. pre-post-annotations -> 골뱅이PreAuthorize, 골뱅이PostAuthorize 활성화
		***골뱅이PreAuthorize: 특정 메소드를 실행하기 전에 role(권한)을 체킹 
		골뱅이PostAuthorize: 특정 메소드를 실행한 후에 role(권한)을 체킹
		
		2. secured-annotations -> 골뱅이Secured를 활성화
		Secured: 스프링 시큐리티 모듈을 지원하기 위한 애너테이션 -->
	<security:global-method-security pre-post-annotations="enabled" secured-annotations="enabled" />
	
	
</beans:beans>
